{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedfe\\\\Desktop\\\\group-video-final-master\\\\client\\\\src\\\\routes\\\\Room.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link } from \"react-router-dom\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\nconst StyledVideo = styled.video`\n  margin: 10px;\n  height: 40%;\n  width: 50%;\n  border-radius: 45px;\n`;\nconst Header = styled.div`\n  font-size: 12px;\n  padding-left: 5%;\n  background-color: #fff;\n  height: 5vh;\n  display: flex;\n  align-items: center;\n  border-bottom: 2px solid black;\n`;\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\nconst Video = props => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  });\n};\n\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2\n};\n\nconst Room = props => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: videoConstraints,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    to: `/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Video Chat \")), /*#__PURE__*/React.createElement(StyledVideo, {\n    muted: true,\n    ref: userVideo,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), peers.map((peer, index) => {\n    return /*#__PURE__*/React.createElement(Video, {\n      key: index,\n      peer: peer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default Room;","map":{"version":3,"sources":["C:/Users/pedfe/Desktop/group-video-final-master/client/src/routes/Room.js"],"names":["React","useEffect","useRef","useState","io","Link","Peer","styled","Container","div","StyledVideo","video","Header","StyledLink","Video","props","ref","peer","on","stream","current","srcObject","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link } from \"react-router-dom\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  margin: 10px;\n  height: 40%;\n  width: 50%;\n  border-radius: 45px;\n`;\n\nconst Header = styled.div`\n  font-size: 12px;\n  padding-left: 5%;\n  background-color: #fff;\n  height: 5vh;\n  display: flex;\n  align-items: center;\n  border-bottom: 2px solid black;\n`;\n\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2,\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: videoConstraints, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <Container>\n      <StyledLink to={`/`}>\n        <h1>Video Chat </h1>\n      </StyledLink>\n      <StyledVideo muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer, index) => {\n        return <Video key={index} peer={peer} />;\n      })}\n    </Container>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}