{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedfe\\\\Desktop\\\\DEMO1\\\\client\\\\src\\\\routes\\\\Room.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link } from \"react-router-dom\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  height: 100vh;\n  margin: auto;\n  flex-wrap: wrap;\n`;\nconst StyledVideo = styled.video`\n  margin: 10px;\n  height: 40%;\n  width: 50%;\n  border-radius: 45px;\n`;\nconst Content = styled.div`\n  height: 95vh;\n`;\nconst Header = styled.div`\n  font-size: 12px;\n  background-color: #fff;\n  height: 5vh;\n  display: flex;\n  align-items: center;\n  width: 100vw;\n  border-bottom: 2px solid black;\n`;\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\nconst Video = props => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  });\n};\n\nfunction Room(props) {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.id;\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socketRef.current.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    to: `/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Video Chat \"))), /*#__PURE__*/React.createElement(StyledVideo, {\n    muted: true,\n    ref: userVideo,\n    autoPlay: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), peers.map((peer, index) => {\n    return /*#__PURE__*/React.createElement(Video, {\n      key: index,\n      peer: peer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }\n    });\n  })));\n}\n\nexport default Room;","map":{"version":3,"sources":["C:/Users/pedfe/Desktop/DEMO1/client/src/routes/Room.js"],"names":["React","useEffect","useRef","useState","io","Link","Peer","styled","Container","div","StyledVideo","video","Content","Header","StyledLink","Video","props","ref","peer","on","stream","current","srcObject","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","id","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","createPeer","push","peerID","payload","addPeer","signal","callerID","item","find","p","userToSignal","initiator","trickle","incomingSignal","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link } from \"react-router-dom\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  margin: 10px;\n  height: 40%;\n  width: 50%;\n  border-radius: 45px;\n`;\n\nconst Content = styled.div`\n  height: 95vh;\n`;\n\nconst Header = styled.div`\n  font-size: 12px;\n  background-color: #fff;\n  height: 5vh;\n  display: flex;\n  align-items: center;\n  width: 100vw;\n  border-bottom: 2px solid black;\n`;\n\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\n\nfunction Room(props) {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.id;\n\n  \n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <Container>\n      <Content>\n        <Header>\n          <StyledLink to={`/`}>\n            <h1>Video Chat </h1>\n          </StyledLink>\n        </Header>\n        <StyledVideo muted ref={userVideo} autoPlay playsInline />\n        {peers.map((peer, index) => {\n          return <Video key={index} peer={peer} />;\n        })}\n      </Content>\n    </Container>\n  );\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}